# The alphabet to use:
# DNA, RNA or Protein
alphabet=DNA

# Input tree to use:
tree.file=LSU.dnd

# Number of sites to simulate:
number_of_sites = 300

# The output file:
output.sequence.file = LSUSim.fasta
# The alignment format:
# Must be one of Mase, Fasta, Phylip, Clustal, DCSE
output.sequence.format=Fasta
# Phylip format options:
# interleaved or sequential:
output.sequence.format_phylip.order=
# classic or extended (PAML):
output.sequence.format_phylip.ext=

# ----------------------------------------------------------------------------------------
#                                     Model specification
# ----------------------------------------------------------------------------------------

# Homogeneous model?
# no => Homogeneous case
# one_per_branch => Galtier & Gouy 97 series of NH models
# general => Specify the model by hand.
nonhomogenous = no

# Options for homogeneous and one-per_branch models:

# Available models.
# For proteins, the DCmutt method is used for JTT92 and DSO78.
# You can use the 'empirical' option to specify another model.
# JCnuc, K80, T92, HKY85, F84, TN93, JCprot, DSO78, JTT92 or empirical
# Append +G2001 or +TS98 to the model name to add a covarion model.
model = HKY85

# Initial values for parameters:
#kappa (K80, T92, HKY85, F84)
#kappa1, kappa2 (TN93)
#theta (T92)
#pi1, piT, piC and piG (HKY85, F84 and TN93)
model.kappa = 2.843
model.piA = 0.13
model.piT = 0.16
model.piC = 0.31
model.piG = 0.40

#If empirical is set, specify the path where to find the model description (in PAML format).
model_empirical.file = 

#Covarions:
#G2001:
model.nu=1.
model.rate_distribution=gamma //only choice for now
model.rate_distribution.classes_number = 4
model.alpha = 0.358
#TS98:
model.s1=1.
model.s2=1.



# For one_per_branch heterogeneous models.
# Tell which parameters are common to all branches.
# Other parameters will be consedered branch specific.
nonhomogneous_one_per_branch.shared_parameters = kappa

# Now the general heterogeneous case:
# Specify the number of distincts models.
number_of_models = 3
# Set up each model:
model1=T92 # The name of the model, as above. Covarion models can be used.
model1.kappa=2 # Initial values for each parameter.
model1.theta=0.5
model1.nodes_id=1,2,3,10,11 # The Ids of the nodes to which this model should be assigned.

model2=K80
model2.kappa=1 # or model2.kappa=model1.kappa if you want only one kappa parameter estimated for both models.

model3=HKY85
model3.kappa=2
model3.piA = 0.13
model3.piT = 0.16
model3.piC = 0.31
model3.piG = 0.40
#etc

# Rate Across Sites variation (not for use with covarion models)
# gamma or constant
rate_distribution = gamma

# The gamma distribution's shape parameter
rate_distribution.alpha = 0.358

# Number of classes for discretization:
rate_distribution.classes_number = 4

