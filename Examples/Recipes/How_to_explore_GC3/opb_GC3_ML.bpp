# SPDX-FileCopyrightText: The Bio++ Development Group
#
# SPDX-License-Identifier: CECILL-2.1

RESULT_DIR=opb_Res

# The alphabet to use:
# DNA, RNA or Protein
alphabet=Codon(letter=DNA)
genetic_code=Standard

FSEQ=example.fa

# ----------------------------------------------------------------
#         Alignment
# ----------------------------------------------------------------

input.data1=alignment(format=Fasta, file=$(FSEQ), sites_to_use=all)

# ----------------------------------------------------------------
#                             Input tree file
# ----------------------------------------------------------------

## Using most likely tree from homogeneous substitutions

input.tree1=user(file=hom_Res/tree_ML.dnd_1)

# --------------------------------------------------------
#                Process from the ML homogeneous
# --------------------------------------------------------

param=hom_Res/params.txt

# --------------------------------------------------------
#                Substitution process, that uses specifications from the params file
# --------------------------------------------------------


process1 = OnePerBranch(model=1, tree=1, rate=1, root_freq=1, shared_parameters=(YN98.kappa, YN98.omega, YN98.1_Full*, YN98.2_Full*, YN98.3_Full.theta1, YN98.3_Full.theta2 ))


# --------------------------------------------------------
#                Links the data and the process
# --------------------------------------------------------

phylo1 = Single(process=1, data=1)

# --------------------------------------------------------
#                                     Optimization
# --------------------------------------------------------

# Method to use for optimizing numerical parameters:
# - None, no optimization performed
# - DB derivatives for branch lengths + Brent for other parameters
# - FullD derivatives for all parameters, using numerical derivatives for non-branch lengths parameters.

optimization = FullD(derivatives=Newton)

# Set the quantity of output to the screen:
optimization.verbose = 3

# Parameters to ignore (for instance equilibrium frequencies)
optimization.ignore_parameters = BrLen

# Maximum number of likelihood evaluations:
optimization.max_number_f_eval = 1000

# Precision to reach:
optimization.tolerance = 0.0001

# idem for error or warning messages:
optimization.message_handler = $(RESULT_DIR)/messages

# A file where to dump optimization steps (a file path or std for standard output)
optimization.profiler = $(RESULT_DIR)/profile

# Should we write the resulting tree? none or file name.
output.tree.file = $(RESULT_DIR)/tree_ML.dnd
output.tree.format = Newick

# Alignment information log file (site specific rates, etc):
output.infos = $(RESULT_DIR)/infos

# Write numerical parameter estimated values:
output.estimates = $(RESULT_DIR)/params.txt

# Backup file
optimization.backup.file = $(RESULT_DIR)/params.bup
